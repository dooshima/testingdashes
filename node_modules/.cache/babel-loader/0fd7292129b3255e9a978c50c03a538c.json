{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar initials = require('initials');\n\nvar addPx = require('add-px');\n\nvar contrast = require('contrast'); // from https://flatuicolors.com/\n\n\nvar defaultColors = ['#2ecc71', // emerald\n'#3498db', // peter river\n'#8e44ad', // wisteria\n'#e67e22', // carrot\n'#e74c3c', // alizarin\n'#1abc9c', // turquoise\n'#2c3e50'];\n\nfunction sumChars(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n}\n\nvar UserAvatar = function (_React$Component) {\n  _inherits(UserAvatar, _React$Component);\n\n  function UserAvatar() {\n    _classCallCheck(this, UserAvatar);\n\n    return _possibleConstructorReturn(this, (UserAvatar.__proto__ || Object.getPrototypeOf(UserAvatar)).apply(this, arguments));\n  }\n\n  _createClass(UserAvatar, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$borderRadius = _props.borderRadius,\n          borderRadius = _props$borderRadius === undefined ? '100%' : _props$borderRadius,\n          src = _props.src,\n          srcset = _props.srcset,\n          name = _props.name,\n          color = _props.color,\n          _props$colors = _props.colors,\n          colors = _props$colors === undefined ? defaultColors : _props$colors,\n          size = _props.size,\n          style = _props.style,\n          onClick = _props.onClick,\n          className = _props.className;\n      if (!name) throw new Error('UserAvatar requires a name');\n      var abbr = initials(name);\n      size = addPx(size);\n      var imageStyle = {\n        display: 'block',\n        borderRadius: borderRadius\n      };\n      var innerStyle = {\n        lineHeight: size,\n        textAlign: 'center',\n        borderRadius: borderRadius\n      };\n\n      if (size) {\n        imageStyle.width = innerStyle.width = innerStyle.maxWidth = size;\n        imageStyle.height = innerStyle.height = innerStyle.maxHeight = size;\n      }\n\n      var inner = void 0,\n          classes = [className, 'UserAvatar'];\n\n      if (src || srcset) {\n        inner = React.createElement('img', {\n          className: 'UserAvatar--img',\n          style: imageStyle,\n          src: src,\n          srcSet: srcset,\n          alt: name\n        });\n      } else {\n        var background = void 0;\n\n        if (color) {\n          background = color;\n        } else {\n          // pick a deterministic color from the list\n          var i = sumChars(name) % colors.length;\n          background = colors[i];\n        }\n\n        innerStyle.backgroundColor = background;\n        inner = abbr;\n      }\n\n      if (innerStyle.backgroundColor) {\n        classes.push('UserAvatar--' + contrast(innerStyle.backgroundColor));\n      }\n\n      return React.createElement('div', {\n        'aria-label': name,\n        className: classes.join(' '),\n        style: style\n      }, React.createElement('div', {\n        className: 'UserAvatar--inner',\n        style: innerStyle\n      }, inner));\n    }\n  }]);\n\n  return UserAvatar;\n}(React.Component);\n\nmodule.exports = UserAvatar;","map":{"version":3,"sources":["index.js"],"names":[],"mappings":"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","sourcesContent":["const React = require('react');\nconst initials = require('initials');\nconst addPx = require('add-px');\nconst contrast = require('contrast');\n\n// from https://flatuicolors.com/\nconst defaultColors = [\n  '#2ecc71', // emerald\n  '#3498db', // peter river\n  '#8e44ad', // wisteria\n  '#e67e22', // carrot\n  '#e74c3c', // alizarin\n  '#1abc9c', // turquoise\n  '#2c3e50', // midnight blue\n];\n\nfunction sumChars(str) {\n  let sum = 0;\n  for(let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n}\n\nclass UserAvatar extends React.Component {\n  render() {\n    let {\n      borderRadius='100%',\n      src,\n      srcset,\n      name,\n      color,\n      colors=defaultColors,\n      size,\n      style,\n      onClick,\n      className\n    } = this.props;\n\n    if (!name) throw new Error('UserAvatar requires a name');\n\n    const abbr = initials(name);\n    size = addPx(size);\n\n    const imageStyle = {\n      display: 'block',\n      borderRadius\n    };\n\n    const innerStyle = {\n      lineHeight: size,\n      textAlign: 'center',\n      borderRadius\n    };\n\n    if (size) {\n      imageStyle.width = innerStyle.width = innerStyle.maxWidth = size;\n      imageStyle.height = innerStyle.height = innerStyle.maxHeight = size;\n    }\n\n    let inner, classes = [className, 'UserAvatar'];\n    if (src || srcset) {\n      inner = <img className=\"UserAvatar--img\" style={imageStyle} src={src} srcSet={srcset} alt={name} />\n    } else {\n      let background;\n      if (color) {\n        background = color;\n      } else {\n        // pick a deterministic color from the list\n        let i = sumChars(name) % colors.length;\n        background = colors[i];\n      }\n\n      innerStyle.backgroundColor = background;\n\n      inner = abbr;\n    }\n\n    if (innerStyle.backgroundColor) {\n      classes.push(`UserAvatar--${contrast(innerStyle.backgroundColor)}`);\n    }\n\n    return (\n      <div aria-label={name} className={classes.join(' ')} style={style}>\n        <div className=\"UserAvatar--inner\" style={innerStyle}>\n          {inner}\n        </div>\n      </div>\n    )\n  }\n}\n\nmodule.exports = UserAvatar;\n"]},"metadata":{},"sourceType":"script"}