{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ANGER DOOSHIMA LOIS\\\\Desktop\\\\medflitdashboard\\\\src\\\\pages\\\\Profile.js\";\nimport * as React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { Autocomplete, ToggleButtonGroup } from 'formik-material-ui-lab';\nimport Box from '@material-ui/core/Box';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nconst Profile = () => {\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        toggle: null,\n        autocomplete: null\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          setSubmitting(false);\n          alert(JSON.stringify(values, null, 2));\n        }, 500);\n      },\n      children: ({\n        submitForm,\n        isSubmitting,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          margin: 1,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            component: ToggleButtonGroup,\n            name: \"toggle\",\n            type: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"left\",\n              \"aria-label\": \"left aligned\",\n              children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"center\",\n              \"aria-label\": \"centered\",\n              children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"right\",\n              \"aria-label\": \"right aligned\",\n              children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"justify\",\n              \"aria-label\": \"justified\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          margin: 1,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"autocomplete\",\n            component: Autocomplete,\n            options: top100Films,\n            getOptionLabel: option => option.title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              error: touched['autocomplete'] && !!errors['autocomplete'],\n              helperText: touched['autocomplete'] && errors['autocomplete'],\n              label: \"Autocomplete\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          margin: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            onClick: submitForm,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/ANGER DOOSHIMA LOIS/Desktop/medflitdashboard/src/pages/Profile.js"],"names":["React","Formik","Form","Field","Button","LinearProgress","Autocomplete","ToggleButtonGroup","Box","ToggleButton","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","Profile","DateFnsUtils","toggle","autocomplete","values","setSubmitting","setTimeout","alert","JSON","stringify","submitForm","isSubmitting","errors","top100Films","option","title","width","params","touched"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Button, LinearProgress } from '@material-ui/core';\r\nimport { Autocomplete, ToggleButtonGroup } from 'formik-material-ui-lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\n\r\n\r\n\r\n\r\nconst Profile = () => {\r\n  return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Formik\r\n          initialValues={{\r\n            toggle: null,\r\n            autocomplete: null,\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              setSubmitting(false);\r\n              alert(JSON.stringify(values, null, 2));\r\n            }, 500);\r\n          }}\r\n        >\r\n          {({ submitForm, isSubmitting, errors }) => (\r\n            <Form>\r\n              <Box margin={1}>\r\n                <Field\r\n                  component={ToggleButtonGroup}\r\n                  name=\"toggle\"\r\n                  type=\"checkbox\"\r\n                >\r\n                  <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                    <FormatAlignLeftIcon />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                    <FormatAlignCenterIcon />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                    <FormatAlignRightIcon />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                    <FormatAlignJustifyIcon />\r\n                  </ToggleButton>\r\n                </Field>\r\n              </Box>\r\n              <Box margin={1}>\r\n                <Field\r\n                  name=\"autocomplete\"\r\n                  component={Autocomplete}\r\n                  options={top100Films}\r\n                  getOptionLabel={(option: 'Movie') => option.title}\r\n                  style={{ width: 300 }}\r\n                  renderInput={(params: 'AutocompleteRenderInputParams') => (\r\n                    <TextField\r\n                      {...params}\r\n                      error={touched['autocomplete'] && !!errors['autocomplete']}\r\n                      helperText={\r\n                        touched['autocomplete'] && errors['autocomplete']\r\n                      }\r\n                      label=\"Autocomplete\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Box>\r\n              <Box margin={1}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  onClick={submitForm}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </MuiPickersUtilsProvider>\r\n\r\n  );\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}