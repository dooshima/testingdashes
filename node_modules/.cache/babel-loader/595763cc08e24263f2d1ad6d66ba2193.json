{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ANGER DOOSHIMA LOIS\\\\Desktop\\\\medflitdashboard\\\\src\\\\pages\\\\Profile.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { TextField } from \"@material-ui/core\";\nimport { render } from \"react-dom\";\nimport * as Yup from \"yup\"; // import { MoreResources, DisplayFormikState } from \"./helper\";\n\nconst Profile = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Basic\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/jaredpalmer/formik\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Formik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }, this), \" \", \"Demo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      onSubmit: async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"Required\")\n      }),\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\"\n            },\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            type: \"text\",\n            value: values.email,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            className: errors.email && touched.email ? \"text-input error\" : \"text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-feedback\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"outline\",\n            onClick: handleReset,\n            disabled: !dirty || isSubmitting,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/ANGER DOOSHIMA LOIS/Desktop/medflitdashboard/src/pages/Profile.js"],"names":["React","Formik","TextField","render","Yup","Profile","email","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","props","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAsB,QAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAChB;AAAA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACU;AAAA,0BACQ,GADR,eAEE;AACE,QAAA,IAAI,EAAC,uCADP;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAQO,GARP;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,eAaU,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADjB;AAEE,MAAA,QAAQ,EAAE,MAAMC,MAAN,IAAgB;AACxB,cAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAjC,CAAN;AACAE,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,OALH;AAME,MAAA,gBAAgB,EAAEH,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACnCT,QAAAA,KAAK,EAAEF,GAAG,CAACY,MAAJ,GACJV,KADI,GAEJW,QAFI,CAEK,UAFL;AAD4B,OAAnB,CANpB;AAAA,gBAYGC,KAAK,IAAI;AACR,cAAM;AACJX,UAAAA,MADI;AAEJY,UAAAA,OAFI;AAGJC,UAAAA,MAHI;AAIJC,UAAAA,KAJI;AAKJC,UAAAA,YALI;AAMJC,UAAAA,YANI;AAOJC,UAAAA,UAPI;AAQJC,UAAAA,YARI;AASJC,UAAAA;AATI,YAUFR,KAVJ;AAWA,4BACE;AAAM,UAAA,QAAQ,EAAEO,YAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,KAAK,EAAE;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,WAAW,EAAC,kBAFd;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAEpB,MAAM,CAACD,KAJhB;AAKE,YAAA,QAAQ,EAAEiB,YALZ;AAME,YAAA,MAAM,EAAEC,UANV;AAOE,YAAA,SAAS,EACPJ,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KAAxB,GACI,kBADJ,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA,kBAJF,EAiBGc,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KAAxB,iBACC;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBAAiCc,MAAM,CAACd;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAqBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,SAFZ;AAGE,YAAA,OAAO,EAAEoB,WAHX;AAIE,YAAA,QAAQ,EAAE,CAACL,KAAD,IAAUC,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,eA6BE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAqCD;AA7DH;AAAA;AAAA;AAAA;AAAA,YAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAgFW,CAjFjB;;KAAMjB,O;AAmFN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {Formik } from 'formik';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport { render } from \"react-dom\";\r\nimport * as Yup from \"yup\";\r\n// import { MoreResources, DisplayFormikState } from \"./helper\";\r\n\r\nconst Profile = () => {\r\n      <div className=\"app\">\r\n                <h1>\r\n                  Basic{\" \"}\r\n                  <a\r\n                    href=\"https://github.com/jaredpalmer/formik\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    Formik\r\n                  </a>{\" \"}\r\n                  Demo\r\n                </h1>\r\n            \r\n                <Formik\r\n                  initialValues={{ email: \"\" }}\r\n                  onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    alert(JSON.stringify(values, null, 2));\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                      .email()\r\n                      .required(\"Required\")\r\n                  })}\r\n                >\r\n                  {props => {\r\n                    const {\r\n                      values,\r\n                      touched,\r\n                      errors,\r\n                      dirty,\r\n                      isSubmitting,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      handleReset\r\n                    } = props;\r\n                    return (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          id=\"email\"\r\n                          placeholder=\"Enter your email\"\r\n                          type=\"text\"\r\n                          value={values.email}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={\r\n                            errors.email && touched.email\r\n                              ? \"text-input error\"\r\n                              : \"text-input\"\r\n                          }\r\n                        />\r\n                        {errors.email && touched.email && (\r\n                          <div className=\"input-feedback\">{errors.email}</div>\r\n                        )}\r\n            \r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"outline\"\r\n                          onClick={handleReset}\r\n                          disabled={!dirty || isSubmitting}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                          Submit\r\n                        </button>\r\n            \r\n                        {/* <DisplayFormikState {...props} /> */}\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n            \r\n                {/* <MoreResources /> */}\r\n    </div>\r\n  \r\n                }\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}